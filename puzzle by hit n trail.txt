using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace random_lubna
{
    class Program
    {
        static void Main(string[] args)
        {
            string[,] puzzle = new string[,]
            {
                { "1" , "2" , "3" },
                { "4" , "5" , " " },
                { "7" , "8" , "6" }

            };
            Console.WriteLine(puzzle[0, 0] + " | " + puzzle[0, 1] + " | " + puzzle[0, 2]);
            Console.WriteLine(puzzle[1, 0] + " | " + puzzle[1, 1] + " | " + puzzle[1, 2]);
            Console.WriteLine(puzzle[2, 0] + " | " + puzzle[2, 1] + " | " + puzzle[2, 2]);
            Console.WriteLine("\n");
            
            while (true)
            {
                bool boolVal = true;
                List<string> str = new List<string>();
                Random random = new Random();
                for (int i = 0; i < 3; i++)
                {
                    for (int j = 0; j < 3; j++)
                    {
                        if (puzzle[i, j] == " ")
                        {
                            if ((i - 1) > -1)
                            {
                                str.Add(puzzle[i - 1, j]);
                            }
                            if ((i + 1) < 3)
                            {
                                str.Add(puzzle[i + 1, j]);
                            }
                            if ((j - 1) > -1)
                            {
                                str.Add(puzzle[i, j - 1]);
                            }
                            if ((j + 1) < 3)
                            {
                                str.Add(puzzle[i, j + 1]);
                            }
                        }
                    }
                }
                for (int m = 0; m < 3; m++)
                {
                    for (int n = 0; n < 3; n++)
                    {
                        if (puzzle[m, n] == " ")
                        {
                            int randomNumber = random.Next(0, str.Count);
                            Console.WriteLine(" "+str[randomNumber] + "  <= Sifted \n");
                            if ((m - 1) > -1)
                            {
                                if (str[randomNumber] == puzzle[m - 1, n])
                                {
                                    puzzle[m, n] = str[randomNumber];
                                    puzzle[m - 1, n] = " ";
                                    boolVal = false;
                                    break;
                                }
                            }
                            if ((m + 1) < 3)
                            {
                                if (str[randomNumber] == puzzle[m + 1, n])
                                {
                                    puzzle[m, n] = str[randomNumber];
                                    puzzle[m + 1, n] = " ";
                                    boolVal = false;
                                    break;
                                }
                            }
                            if ((n - 1) > -1)
                            {
                                if (str[randomNumber] == puzzle[m, n - 1])
                                {
                                    puzzle[m, n] = str[randomNumber];
                                    puzzle[m, n - 1] = " ";
                                    boolVal = false;
                                    break;
                                }
                            }
                            if ((n + 1) < 3)
                            {
                                if (str[randomNumber] == puzzle[m, n + 1])
                                {
                                    puzzle[m, n] = str[randomNumber];
                                    puzzle[m, n + 1] = " ";
                                    boolVal = false;
                                    break;
                                }
                            }
                        }
                    }
                    if (boolVal == false)
                    {
                        break;
                    }
                }
                Console.WriteLine(puzzle[0, 0] + " | " + puzzle[0, 1] + " | " + puzzle[0, 2]);
                Console.WriteLine(puzzle[1, 0] + " | " + puzzle[1, 1] + " | " + puzzle[1, 2]);
                Console.WriteLine(puzzle[2, 0] + " | " + puzzle[2, 1] + " | " + puzzle[2, 2]);
                Console.WriteLine("\n");
                if (puzzle[0, 0] == "1" && puzzle[0, 1] == "2" && puzzle[0, 2] == "3" && puzzle[1, 0] == "4" && puzzle[1, 1] == "5" && puzzle[1, 2] == "6" && puzzle[2, 0] == "7" && puzzle[2, 1] == "8" && puzzle[2, 2] == " ")
                {
                    Console.WriteLine("done");
                    break;
                }
                Console.ReadKey();
            }
        }
    }
}
